
import subprocess

# index.tsxファイルを実行
result = subprocess.run(["node", "-e", 'import React from \'react\';\nimport { HighlightedGroup } from \'@/types\';\nimport { Network, Plus, Trash } from \'lucide-react\';\nimport Button from \'@/components/common/Button\';\n\ninterface HighlightedGroupsProps {\n  highlightedNodeGroups: HighlightedGroup[];\n  selectedGroupId: number | null;\n  setSelectedGroupId: (id: number | null) => void;\n  addNewHighlightGroup: () => void;\n  editGroupName: (groupId: number, newName: string) => void;\n  toggleGroupHighlight: (groupId: number, isSelected: boolean) => void;\n  removeHighlightGroup: (groupId: number) => void;\n  highlightNode: (node: any, groupId: number) => void;\n}\n\nconst HighlightedGroups: React.FC<HighlightedGroupsProps> = ({\n  highlightedNodeGroups,\n  selectedGroupId,\n  setSelectedGroupId,\n  addNewHighlightGroup,\n  editGroupName,\n  toggleGroupHighlight,\n  removeHighlightGroup,\n  highlightNode\n}) => {\n  return (\n    <div className="bg-[#2a2a2a] bg-opacity-70 rounded p-2 max-w-xs max-h-[50vh] overflow-y-auto absolute top-4 left-4 z-50">\n      {/* コンポーネントの内容は変更なし */}\n      <div className="flex border-b border-gray-600">\n        {highlightedNodeGroups.map((group) => (\n          <button\n            key={group.id}\n            className={`px-3 py-2 ${selectedGroupId === group.id ? \'text-blue-500 border-b-2 border-blue-500\' : \'text-[#d4d4d4]\'}`}\n            onClick={() => setSelectedGroupId(group.id)}\n          >\n            <Network className="w-4 h-4" />\n          </button>\n        ))}\n        <button\n          className="px-3 py-2 text-[#d4d4d4]"\n          onClick={addNewHighlightGroup}\n        >\n          <Plus className="w-4 h-4" />\n        </button>\n      </div>\n      {highlightedNodeGroups.map((group) => (\n        <div key={group.id} className={`mt-2 ${selectedGroupId === group.id ? \'\' : \'hidden\'}`}>\n          <div className="flex items-center justify-between mb-2">\n            <div className="flex items-center">\n              <input\n                type="checkbox"\n                checked={group.nodes.every((node) => node.isSelected)}\n                onChange={(e) => toggleGroupHighlight(group.id, e.target.checked)}\n                className="mr-2"\n              />\n              <input\n                type="text"\n                value={group.name}\n                onChange={(e) => editGroupName(group.id, e.target.value)}\n                className="bg-transparent text-[#d4d4d4] text-sm border-b border-gray-600 focus:outline-none focus:border-blue-500"\n              />\n            </div>\n            <Button\n              onClick={() => removeHighlightGroup(group.id)}\n              className="text-red-500 hover:text-red-700"\n            >\n              <Trash className="w-4 h-4" />\n            </Button>\n          </div>\n          <ul className="text-[#d4d4d4] text-sm max-h-40 overflow-y-auto">\n            {group.nodes.map((node) => (\n              <li key={node.id} className="flex items-center">\n                <input\n                  type="checkbox"\n                  checked={node.isSelected}\n                  onChange={() => highlightNode(node, group.id)}\n                  className="mr-2"\n                />\n                <span>{node.id || node.name}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default HighlightedGroups;\n'], capture_output=True, text=True)

# 実行結果を出力
print("stdout:", result.stdout)
print("stderr:", result.stderr)
